# Main nginx configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    multi_accept on;
    worker_connections 65535;
    use epoll;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # MIME
    include mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main_json escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"project":"$project_name"'
    '}';

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # Hostking Admin Panel
    server {
        listen 80;
        server_name hostking.yourdomain.com;
        set $project_name "hostking";

        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

        # Logging
        access_log /var/log/nginx/hostking.access.log main_json;
        error_log /var/log/nginx/hostking.error.log warn;

        # API endpoints
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Static assets
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            access_log off;
        }

        # SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache";
        }
    }

    # Dynamic project configuration
    include /etc/nginx/conf.d/*.conf;
}

# Example of a managed project configuration (to be included in conf.d/)
# server {
#     listen 80;
#     server_name project1.example.com;
#     set $project_name "project1";
#
#     # Static website
#     location / {
#         root /var/www/project1;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }
#
#     # API backend
#     location /api/ {
#         proxy_pass http://project1-backend:3000/;
#         include /etc/nginx/proxy_params;
#     }
#
#     access_log /var/log/nginx/project1.access.log main_json;
#     error_log /var/log/nginx/project1.error.log warn;
# } 