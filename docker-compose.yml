version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME:-squadronuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-squadronpass}
      POSTGRES_DB: ${DB_DATABASE:-squadron}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-squadronuser} -d ${DB_DATABASE:-squadron}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME:-squadronuser}
      - DB_PASSWORD=${DB_PASSWORD:-squadronpass}
      - DB_DATABASE=${DB_DATABASE:-squadron}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_jwt_key_here}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-1d}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION:-7d}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/logs:/usr/src/app/logs
    networks:
      - app_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
      #- "3001:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://168.119.111.140:3000/api
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:

networks:
  app_network:
    driver: bridge 