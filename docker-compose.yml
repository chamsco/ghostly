version: '3.8'
services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ghostly
      POSTGRES_USER: ghostlyuser
      POSTGRES_PASSWORD: ghostlypass
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghostlyuser -d ghostly"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - type: volume
        source: redis_data
        target: /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=ghostlyuser
      - DB_PASSWORD=ghostlypass
      - DB_DATABASE=ghostly
      - JWT_SECRET=your_jwt_secret_key_here
      - SESSION_SECRET=your_session_secret_key_here
      - REDIS_URL=redis://redis:6379
    volumes:
      - type: bind
        source: ./backend/logs
        target: /app/logs
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 